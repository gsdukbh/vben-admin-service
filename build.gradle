plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'top.werls'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    // 使用阿里云开源镜像代理 https://developer.aliyun.com/mvn/guide
    maven {
        url 'https://maven.aliyun.com/nexus/content/groups/public/'
    }
    maven {
        url 'https://maven.aliyun.com/repository/spring/'
    }
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven {
        url 'https://maven.aliyun.com/repository/spring-plugin'
    }
    mavenLocal()
    mavenCentral()
}

ext {
    gsonVersion = '2.8.9'
    lang3Version = '3.12.0'
    springdocVersion = '1.6.5'
    jwtVersion = '0.11.2'
    bouncycastleVersion = '1.69'
    druidVersion = '1.2.8'
    mybatisVersion = '2.2.2'
    mybatisPlusVersion = '3.5.1'
    freemarkerVersion = '2.3.31'
}


dependencies {

    implementation "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusVersion}"
    implementation "com.baomidou:mybatis-plus-generator:${mybatisPlusVersion}"
    implementation "org.freemarker:freemarker:${freemarkerVersion}"
    implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisVersion}"
    implementation "com.alibaba:druid:${druidVersion}"
    //mysql
    runtimeOnly 'mysql:mysql-connector-java'

    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "org.apache.commons:commons-lang3:${lang3Version}"

    // spring doc
    implementation "org.springdoc:springdoc-openapi-ui:${springdocVersion}"
    // jwt
    implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}",
            // Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
            "org.bouncycastle:bcprov-jdk15on:${bouncycastleVersion}"
    "io.jsonwebtoken:jjwt-gson:${jwtVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
